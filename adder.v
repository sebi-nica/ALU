/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */
module adder (
  input [7:0] x,
  input [7:0] y,
  input op,
  output [8:0] z
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  wire s10;
  wire s11;
  wire s12;
  wire s13;
  wire s14;
  wire s15;
  wire s16;
  wire s17;
  wire s18;
  wire s19;
  wire s20;
  wire s21;
  wire s22;
  wire s23;
  wire s24;
  wire s25;
  wire s26;
  wire s27;
  wire s28;
  wire s29;
  wire s30;
  wire s31;
  wire s32;
  assign s28 = (y[7] ^ op);
  assign s24 = (y[6] ^ op);
  assign s20 = (y[5] ^ op);
  assign s16 = (y[4] ^ op);
  assign s12 = (y[3] ^ op);
  assign s8 = (y[2] ^ op);
  assign s4 = (y[1] ^ op);
  assign s0 = (y[0] ^ op);
  assign s1 = x[0];
  assign s5 = x[1];
  assign s9 = x[2];
  assign s13 = x[3];
  assign s17 = x[4];
  assign s21 = x[5];
  assign s25 = x[6];
  assign s29 = x[7];
  fac fac_i0 (
    .y( s0 ),
    .x( s1 ),
    .c_in( op ),
    .z( s2 ),
    .c_out( s3 )
  );
  fac fac_i1 (
    .y( s4 ),
    .x( s5 ),
    .c_in( s3 ),
    .z( s6 ),
    .c_out( s7 )
  );
  fac fac_i2 (
    .y( s8 ),
    .x( s9 ),
    .c_in( s7 ),
    .z( s10 ),
    .c_out( s11 )
  );
  fac fac_i3 (
    .y( s12 ),
    .x( s13 ),
    .c_in( s11 ),
    .z( s14 ),
    .c_out( s15 )
  );
  fac fac_i4 (
    .y( s16 ),
    .x( s17 ),
    .c_in( s15 ),
    .z( s18 ),
    .c_out( s19 )
  );
  fac fac_i5 (
    .y( s20 ),
    .x( s21 ),
    .c_in( s19 ),
    .z( s22 ),
    .c_out( s23 )
  );
  fac fac_i6 (
    .y( s24 ),
    .x( s25 ),
    .c_in( s23 ),
    .z( s26 ),
    .c_out( s27 )
  );
  fac fac_i7 (
    .y( s28 ),
    .x( s29 ),
    .c_in( s27 ),
    .z( s30 ),
    .c_out( s31 )
  );
  fac fac_i8 (
    .y( s28 ),
    .x( s29 ),
    .c_in( s31 ),
    .z( s32 )
  );
  assign z[0] = s2;
  assign z[1] = s6;
  assign z[2] = s10;
  assign z[3] = s14;
  assign z[4] = s18;
  assign z[5] = s22;
  assign z[6] = s26;
  assign z[7] = s30;
  assign z[8] = s32;
endmodule
