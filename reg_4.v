// generated by digital
module reg_4 (
  input clk,
  input rst,
  input [3:0] in,
  input load,
  output [3:0] out
);
  wire s0;
  wire s1;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire [3:0] out_temp;
  wire [3:0] s9;
  assign s0 = ~ rst;
  assign s1 = (s9[0] & s0);
  assign s7 = (s9[1] & s0);
  assign s2 = (s9[2] & s0);
  assign s4 = (s9[3] & s0);
  Mux_2x1_NBits #(
    .Bits(4)
  )
  Mux_2x1_NBits_i0 (
    .sel( load ),
    .in_0( out_temp ),
    .in_1( in ),
    .out( s9 )
  );
  d_ff d_ff_i1 (
    .d( s2 ),
    .clk( clk ),
    .q( s3 )
  );
  d_ff d_ff_i2 (
    .d( s4 ),
    .clk( clk ),
    .q( s5 )
  );
  d_ff d_ff_i3 (
    .d( s1 ),
    .clk( clk ),
    .q( s6 )
  );
  d_ff d_ff_i4 (
    .d( s7 ),
    .clk( clk ),
    .q( s8 )
  );
  assign out_temp[0] = s6;
  assign out_temp[1] = s8;
  assign out_temp[2] = s3;
  assign out_temp[3] = s5;
  assign out = out_temp;
endmodule
